# -*- coding: utf-8 -*-
"""BOJ_14502.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wxvZYdsYRlRncXiOS0VlnvmCKqzPAzVm
"""

from collections import deque
from itertools import product
from itertools import combinations
import copy

m, n = list(map(int, input().split()))
items = [list(range(m)), list(range(n))]
t = list(product(*items))
graph = [list(map(int, input().split())) for _ in range(m)]

virus_list = []
res_list = []

for i in range(m):
    for u in range(n):
        if graph[i][u] == 2:
            virus_list.append((i,u))
            
comb = list(combinations(t, 3))
dx, dy = [0, 0, 1, -1], [1, -1, 0, 0]

def bfs(x, y, g):
    q = deque()
    q.append((x, y))
    res = 0

    while q:
        px, py = q.popleft()
        for i in range(4):
            nx, ny = px + dx[i], py + dy[i]
            if 0 <= nx < m and 0 <= ny < n:
                if g[nx][ny] == 0:
                    g[nx][ny] = 2
                    q.append((nx, ny))


for i in comb:
    x1, y1 = i[0][0], i[0][1]
    x2, y2 = i[1][0], i[1][1]
    x3, y3 = i[2][0], i[2][1]
    res = 0

    if (graph[x1][y1] == 0) and (graph[x2][y2] == 0) and (graph[x3][y3] == 0):
    
        new_graph = copy.deepcopy(graph)
        
        new_graph[x1][y1] = 1
        new_graph[x2][y2] = 1
        new_graph[x3][y3] = 1

        for x, y in virus_list:
            bfs(x, y, new_graph)
        
        for i in range(m):
            for u in range(n):
                if new_graph[i][u] == 0:
                    res += 1
        res_list.append(res)
    
if len(res_list):
    print(max(res_list))
else:
    print(0)

print(max(res_list))

nx = -1
print(0 > nx or nx >= 7)

graph = [[2, 0, 0, 0, 1, 1, 0],[0, 0, 1, 0, 1, 2, 0],[0, 1, 1, 0, 1, 0, 0],[0, 1, 0, 0, 0, 0, 0],[0, 0, 0, 0, 0, 1, 1],[0, 1, 0, 0, 0, 0, 0],[0, 1, 0, 0, 0, 0, 0]]

bfs(0,0,graph)
print(graph)

a = [0,0]
b = a
b[1] = 1 
print(a,b)

