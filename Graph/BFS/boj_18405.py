# -*- coding: utf-8 -*-
"""BOJ_18405.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13ur5aE2a-lZiBVJmYFbWmjke749l-vJQ
"""

from collections import deque

n, k = map(int, input().split())
graph = list()
dx, dy = [0,0,1,-1], [1,-1,0,0]
checked = [[[0,-1] for _ in range(n)] for _ in range(n)]
# index 1 = virus&visited, index 1 = second

for i in range(n):
    graph.append(list(map(int, input().split())))

s, target_x, target_y = map(int, input().split())


def bfs(x,y):
    checked[x][y][0] = graph[x][y]
    checked[x][y][1] = 0
    q = deque()
    q.append((x,y))
    
    while q:
        px, py = q.popleft()
        for i in range(4):
            nx, ny = px + dx[i], py + dy[i]
            if 0 <= px + dx[i] < n and 0 <= py + dy[i] < n:
                if(checked[nx][ny][1] == -1 or checked[nx][ny][1] > checked[px][py][1]+1):
                    if(graph[nx][ny] == 0):
                        checked[nx][ny][1] = checked[px][py][1] + 1
                        checked[nx][ny][0] = checked[px][py][0] 
                        q.append((nx,ny))
                elif(checked[nx][ny][1] == checked[px][py][1]+1):
                    if checked[px][py][0] < checked[nx][ny][0]:
                        checked[nx][ny][1] = checked[px][py][1] + 1
                        checked[nx][ny][0] = checked[px][py][0]                    
                        q.append((nx,ny))
                
for i in range(n):
    for u in range(n):
        if graph[i][u] != 0:
            bfs(i,u)

if checked[target_x-1][target_y-1][1] <= s:
    print(checked[target_x-1][target_y-1][0])
else:
    print(0)